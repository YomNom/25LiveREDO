<script lang="ts">
    import Popup from "./Popup.svelte";
    import InfoPopup from "./InfoPopup.svelte";
  
    type Location = {
      name: string;
      status: string;
      location: string;
      category: string;
      capacity: number;
      resources: string[];
    };
  
    let locations: Location[] = [
      { name: "60 West Charlton 220", status: "Available", location: "60 West Charlton", category: "Study Room", capacity: 74, resources: ["Carpet", "White Board", "TV", "+1"] },
      { name: "60WCHARL 140", status: "Unavailable", location: "60 West Charlton", category: "Study Room", capacity: 6, resources: ["Projector", "White Board"] },
      { name: "Clifton Court Hall", status: "Available", location: "Clifton Court Hall", category: "Study room", capacity: 20, resources: ["Wi-Fi", "Projector"] },
      { name: "Linder Business Center 102", status: "Available", location: "Linder Business Building", category: "Study Room", capacity: 10, resources: ["White Board", "Wi-Fi"] },
      { name: "TEACHERS 340", status: "Unavailable", location: "Teachers College", category: "Studio", capacity: 15, resources: ["Easel", "Canvas Supplies"] },
      { name: "ZIMMRRF", status: "Available", location: "Zimmer Roof Garden", category: "Outdoors", capacity: 50, resources: ["Outdoors"] },
      { name: "Study room 201", status: "Available", location: "Langsam Library", category: "Quiet Study", capacity: 50, resources: ["Wi-Fi", "Power Outlets"] },
      { name: "Computer Science Lab 300", status: "Unavailable", location: "Mantei Center", category: "Lab", capacity: 30, resources: ["Computers", "Wi-Fi", "White Board"] },
      { name: "ARTSCI 255", status: "Available", location: "Arts & Sciences Hall", category: "Meeting Room", capacity: 12, resources: ["TV", "Wi-Fi"] },
      { name: "ARTSCI 27", status: "Available", location: "Arts & Sciences Hall", category: "Meeting Room", capacity: 5, resources: ["Piano", "Soundproof Walls"] },
      { name: "TEACHERS 340", status: "Unavailable", location: "Teachers College", category: "Study Room", capacity: 10, resources: ["Wi-Fi", "Power Outlets"] },
      { name: "BAFLORY 145", status: "Available", location: "BA Flory Center", category: "Lab", capacity: 20, resources: ["Chemicals", "Lab Equipment", "Projector"] },
      { name: "Design Lab 401", status: "Unavailable", location: "DAAP Design Building", category: "Lab", capacity: 25, resources: ["3D Printer", "White Board"] },
      { name: "WOLFSON 4300", status: "Available", location: "Wolfson Center", category: "Quiet Study", capacity: 10, resources: ["Wi-Fi", "Power Outlets"] },
      { name: "ZIMMER 414", status: "Unavailable", location: "Zimmer Hall", category: "Study Room", capacity: 8, resources: ["White Board", "TV"] },
    ];
  
    let currentPage = 1;
    let itemsPerPage = 7;
    let totalPages = Math.ceil(locations.length / itemsPerPage);
  
    $: paginatedLocations = locations.slice(
      (currentPage - 1) * itemsPerPage,
      currentPage * itemsPerPage
    );
  
    let isPopupVisible = false;
    let isInfoPopupVisible = false;
    let selectedLocation: Location | null = null;
  
    function openPopup(location: Location) {
      selectedLocation = location;
      isPopupVisible = true;
    }
  
    function openInfoPopup(location: Location) {
      selectedLocation = location;
      isInfoPopupVisible = true;
    }
  
    function closePopup() {
      isPopupVisible = false;
      isInfoPopupVisible = false;
      selectedLocation = null;
    }
  
    function handleConfirm() {
      if (selectedLocation) {
        selectedLocation.status = "Unavailable";
        locations = [...locations];
      }
      closePopup();
    }
  
    function handleInfoPopupConfirm() {
      if (selectedLocation) {
        selectedLocation.status = "Unavailable";
        locations = [...locations];
      }
      closePopup();
    }
  
    function changePage(newPage: number) {
      if (newPage > 0 && newPage <= totalPages) {
        currentPage = newPage;
      }
    }
  </script>
  
  <div class="locations-container">
    <h2>Your Locations</h2>
    <p class="location-count">{locations.length} available locations</p>
  
    <div class="locations-table-wrapper">
      <table>
        <thead>
          <tr>
            <th>Room Name</th>
            <th>Status</th>
            <th>Location</th>
            <th>Categories</th>
            <th>Max Capacity</th>
            <th>Resources</th>
            <th>Reserve</th>
          </tr>
        </thead>
        <tbody>
          {#each paginatedLocations as location}
            <tr>
              <td on:click={() => openInfoPopup(location)} class="clickable">{location.name}</td>
              <td class="status {location.status === 'Available' ? 'available' : 'unavailable'}">
                {location.status}
              </td>
              <td>{location.location}</td>
              <td>{location.category}</td>
              <td>{location.capacity}</td>
              <td>
                {#each location.resources as resource}
                  <span class="resource">{resource}</span>
                {/each}
              </td>
              <td>
                <button
                  on:click={() => openPopup(location)}
                  disabled={location.status !== "Available"}
                  class="reserve-button"
                >
                  Reserve
                </button>
              </td>
            </tr>
          {/each}
        </tbody>
      </table>
    </div>
  
    <div class="pagination">
      <button on:click={() => changePage(currentPage - 1)} disabled={currentPage === 1}>
        Previous
      </button>
      <span>Page {currentPage} of {totalPages}</span>
      <button on:click={() => changePage(currentPage + 1)} disabled={currentPage === totalPages}>
        Next
      </button>
    </div>
  
    <!-- Reservation Confirmation Popup -->
    <Popup
      isVisible={isPopupVisible}
      message={`Are you sure you want to reserve "${selectedLocation?.name}"?`}
      confirmLabel="Yes"
      cancelLabel="No"
      on:confirm={handleConfirm}
      on:cancel={closePopup}
    />
  
    <!-- Room Info Popup -->
    {#if isInfoPopupVisible && selectedLocation}
      <InfoPopup
        isVisible={isInfoPopupVisible}
        location={selectedLocation}
        confirmLabel="Reserve"
        cancelLabel="Close"
        on:confirm={handleInfoPopupConfirm}
        on:cancel={closePopup}
      />
    {/if}
  </div>
  
  <style>
    .locations-container {
      background: #ffffff;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      margin-top: 20px;
    }
  
    .locations-table-wrapper {
      overflow-x: auto;
      margin-bottom: 15px;
    }
  
    table {
      width: 100%;
      border-collapse: collapse;
    }
  
    th, td {
      text-align: left;
      padding: 10px;
      border-bottom: 1px solid #ddd;
    }
  
    th {
      background: #f8f9fa;
    }
  
    .status {
      font-weight: bold;
      text-align: center;
    }
  
    .status.available {
      color: green;
    }
  
    .status.unavailable {
      color: red;
    }
  
    .clickable {
      color: #007bff;
      cursor: pointer;
      text-decoration: underline;
    }
  
    .reserve-button {
      background-color: #007bff;
      color: white;
      border: none;
      border-radius: 5px;
      padding: 5px 10px;
      cursor: pointer;
    }
  
    .reserve-button:disabled {
      background: #ccc;
      cursor: not-allowed;
    }
  
    .pagination {
      display: flex;
      justify-content: center;
      gap: 10px;
    }
  
    .pagination button {
      padding: 5px 10px;
      border-radius: 4px;
      border: none;
      background: #007bff;
      color: white;
      cursor: pointer;
    }
  
    .pagination button:disabled {
      background: #ddd;
      cursor: not-allowed;
    }
  
    .resource {
      display: inline-block;
      padding: 3px 8px;
      background: #e9ecef;
      color: #495057;
      border-radius: 5px;
      margin-right: 5px;
      font-size: 0.875rem;
    }
  </style>
  